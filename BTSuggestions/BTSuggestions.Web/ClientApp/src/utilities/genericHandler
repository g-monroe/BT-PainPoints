import { APIHandler } from './apiHandler';

export interface IGenericHandler<T>{
    getById(id: number): Promise<T>;
    createHero(issue:T): Promise<T>;
    deleteById(id: number): Promise<T>;
    updateById(id: number, entity:T): Promise<T>;
}

    

export class GenericHandler<T> implements IGenericHandler<T>{
    //Get Element by ID and then respond with the Item.
    async getById(id: number): Promise<T>{
        return await APIHandler(`/api/painpoint/${id}`, {
            method: "GET",
            responseType:T
        });
    }
    
    //Create Element by ID and then respond with the Item.
    async createHero(issue:T): Promise<T>{
        return await APIHandler(`/api/painpoint`, {
            method: "POST",
            data: issue,
            responseType: T
        });
    }
    //Delete Element by ID and then respond with the Item.
    async deleteById(id: number): Promise<T>{
        return await APIHandler(`/api/painpoint/${id}`, {
            method: "DELETE",
            responseType:T
        });
    }
    //Update Element by ID and then respond with the Item.
    async updateById(id: number, entity:T): Promise<T>{
        return await APIHandler(`/api/painpoint/${id}`, {
            method: "PUT",
            data: entity,
            responseType:T
        });
    }
}